/** Declaration file generated by dts-gen */
/* tslint:disable */

export = hard_source_webpack_plugin;
declare class hard_source_webpack_plugin {
  constructor(...args: any[]);

  apply(...args: any[]): void;

  getCachePath(...args: any[]): void;

  getPath(...args: any[]): void;

}

declare namespace hard_source_webpack_plugin {
  class ExcludeModulePlugin {
    constructor(...args: any[]);

    apply(...args: any[]): void;

  }

  class HardSourceLevelDbSerializerPlugin {
    constructor(...args: any[]);

    apply(...args: any[]): void;

    static createSerializer(info: any): any;

  }

  class LevelDbSerializerPlugin {
    constructor(...args: any[]);

    apply(...args: any[]): void;

    static createSerializer(info: any): any;

  }

  class SerializerAppend2Plugin {
    constructor(...args: any[]);

    apply(...args: any[]): void;

    static createSerializer({
                              cacheDirPath,
                              name,
                              autoParse
                            }: any): any;

  }

  class SerializerAppendPlugin {
    constructor(...args: any[]);

    apply(...args: any[]): void;

    static createSerializer({
                              cacheDirPath,
                              name,
                              autoParse
                            }: any): any;

  }

  class SerializerCacachePlugin {
    constructor(...args: any[]);

    apply(...args: any[]): void;

    static createSerializer({ cacheDirPath, name }: any): any;

  }

  class SerializerJsonPlugin {
    constructor(...args: any[]);

    apply(...args: any[]): void;

    static createSerializer({ cacheDirPath, name }: any): any;

  }

  namespace ExcludeModulePlugin {
    namespace prototype {
      function apply(...args: any[]): void;

    }

  }

  namespace HardSourceLevelDbSerializerPlugin {
    namespace prototype {
      function apply(...args: any[]): void;

    }

  }

  namespace LevelDbSerializerPlugin {
    namespace prototype {
      function apply(...args: any[]): void;

    }

  }

  namespace SerializerAppend2Plugin {
    namespace prototype {
      function apply(...args: any[]): void;

    }

  }

  namespace SerializerAppendPlugin {
    namespace prototype {
      function apply(...args: any[]): void;

    }

  }

  namespace SerializerCacachePlugin {
    namespace prototype {
      function apply(...args: any[]): void;

    }

  }

  namespace SerializerJsonPlugin {
    namespace prototype {
      function apply(...args: any[]): void;

    }

  }

  namespace prototype {
    function apply(...args: any[]): void;

    function getCachePath(...args: any[]): void;

    function getPath(...args: any[]): void;

  }

}

