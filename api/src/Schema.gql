schema {
  query: Query
  mutation: Mutation
}

####### ----- TYPES ----- #######
type Query {
  # Authenticate user by his login and password
  authenticateUser(login: String!, password: String!): User
  # Get all users - returns array
  getAllUsers: [User]!
}

type Mutation {
  # Add user to database
  addUser(data: UserInput!): Boolean
  # Change password
  changePassword(id: ID, password: String, newPassword: String): Boolean
  # Update user info
  updateUserData(id: ID!): Services!
  # Create DB
  createDB: Boolean
}
####### ----- END TYPES ----- #######

####### ----- User ----- #######
type User {
  id: ID!
  avatar: String
  email: String!
  login: String!
  services: Services!
}

input UserInput {
  avatar: String
  email: String!
  login: String!
  password: String!
}
####### ----- END User ----- #######

####### ----- Services ----- #######
type Services {
  digitalocean: DigitalOcean!
  spotify: Spotify!
  paypal: Paypal!
}

input authTokens {
  spotifyAuth: String
  digitaloceanAuth: String
  paypalAuth: String
}
####### ----- END User ----- #######

####### ----- DigitalOcean ----- #######
type DigitalOcean {
  email: String!
  total: String!
  dropletLimit: String!
  lastCreatedDroplet: String!
}
####### ----- END DigitalOcean ----- #######

####### ----- Spotify ----- #######
type Spotify {
  email: String!
  username: String!
  type: String!
}
####### ----- END Spotify ----- #######

####### ----- Paypal ----- #######
type Paypal {
  username: String!
  email: String!
  phone: String!
  language: String!
  verified: String!
  country: String!
  zoneinfo: String!
}
####### ----- END Paypal ----- #######
