schema {
  query: Query
  mutation: Mutation
}

type Query {
  # Authenticate user by his login and password
  authenticateUser(login: String!, password: String!): User
  # Fetch new data from service
  # @HINT: Maybe add selecting services?
  updateUserData(session_id: String!): [Service]
}

type Mutation {
  addUser(data: UserInput!): Boolean!

  addService(data: ServiceInput!, update: Boolean): Boolean!
  # Update token
  updateBasicToken(
    session_id: String!
    serviceName: String!
    token: String!
  ): Boolean!
}

type User {
  session_id: String!
  avatar: String
  email: String!
  isOnline: Boolean!
  registerDate: String!
  services: [Service]
  avServices: [String]
}

input UserInput {
  avatar: String
  email: String!
  isOnline: Boolean!
  login: String!
  password: String!
}

input ServiceInput {
  serviceName: String!
  apiURL: String!
  tokenService: String
  authorizeURL: String
  userScopes: [String!]
  clientID: String
  clientSecret: String
  paths: [String!]
  requestedData: [String!]
  tokenType: String!
  redirectURL: String
}

type Service {
  serviceName: String!
  data: String!
}
