schema {
  query: Query
  mutation: Mutation
}

type Query {
  # Authenticate user by his login and password
  AuthenticateUser(login: String!, password: String!): User
}

type Mutation {
  # Add user to database
  AddUser(data: UserInput!): Boolean
  # Update user info
  UpdateUserData(id: ID!): Services!
  # Update digitalocean token
  UpdateDigitalOceanToken(id: ID!, token: String!): Boolean
}

type User {
  id: ID
  User: UserDetails
  DigitalOcean: DigitalOcean
  Spotify: Spotify
  Paypal: Paypal
}

type UserDetails {
  Avatar: String
  Email: String
  Login: String
}

input UserInput {
  Avatar: String
  Email: String!
  Login: String!
  Password: String!
}

type Services {
  DigitalOcean: DigitalOcean
  Spotify: Spotify
  Paypal: Paypal
}

type Spotify {
  Email: String!
  Username: String!
  Type: String!
}

type DigitalOcean {
  Email: String!
  Total: String!
  DropletLimit: String!
  LastCreatedDroplet: String!
}

type Paypal {
  Username: String!
  Email: String!
  Phone: String!
  Verified: String!
  Country: String!
  Zoneinfo: String!
}
