version: "3"

services:
  # BUILD APP
  build:
    build: .
    container_name: dashboard_build_runner
    volumes:
      - dashboard_app:/Dashboard

  # # BACKEND
  api:
    image: node:latest
    container_name: dashboard_api
    command: node /Dashboard/packages/Triton.Api/build/app/App.js
    ports:
      - "4000:4000"
    depends_on:
      - build
    volumes:
      - dashboard_app:/Dashboard
    networks:
      - dashboard
    environment:
      NODE_ENV: test
    labels:
      - "traefik.backend=DashboardApi"
      - "traefik.docker.network=dashboard"
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host:api.liquidash.pl"
      - "traefik.port=4000"

  # # FRONTEND
  # client:
  #   image: nginx:stable
  #   container_name: dashboard_client
  #   command: nginx -c /Dashboard/nginx.conf -g "daemon off;"
  #   depends_on:
  #     - build
  #   volumes:
  #     - dashboard_app:/Dashboard
  #   networks:
  #     - dashboard
  #   labels:
  #     - "traefik.backend=DashboardClient"
  #     - "traefik.docker.network=dashboard"
  #     - "traefik.frontend.passHostHeader=true"
  #     - "traefik.enable=true"
  #     - "traefik.frontend.rule=Host:liquidash.pl"
  #     - "traefik.port=443"
  #     - "traefik.protocol=https"

  # DATABASE
  db:
    image: postgres:latest
    container_name: dashboard_db
    ports:
      - "5432:5432"
    networks:
      - dashboard
    restart: always
    env_file:
      - postgres-test.env

    # labels:
    #   - "traefik.backend=DashboardDB"
    #   - "traefik.docker.network=dashboard"
    #   - "traefik.enable=true"
    #   - "traefik.frontend.rule=Host:db.liquidash.pl"
    #   - "traefik.port=5432"

  # REVERSE PROXY
  reverse-proxy:
    image: traefik
    container_name: dashboard_load_balancer
    command: --api --docker
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /usr/app/DashboardTS/traefik.toml:/traefik.toml
      - /var/run/docker.sock:/var/run/docker.sock
      - dashboard_app:/Dashboard
    networks:
      - dashboard
    labels:
      - "traefik.backend=DashboardReverseProxy"
      - "traefik.docker.network=dashboard"
      - "traefik.frontend.rule=Host:traefik.liquidash.pl"
      - "traefik.port=8080"
volumes:
  dashboard_app:
networks:
  dashboard:
